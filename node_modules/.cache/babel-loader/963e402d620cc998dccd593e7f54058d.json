{"ast":null,"code":"var _jsxFileName = \"/Users/aaron/1portfolio/port/portApp/frontend/src/components/SignupFormPage/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport './SignupForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SignupFormPage() {\n  _s();\n\n  const dispatch = useDispatch();\n  const sessionUser = useSelector(state => state.session.user);\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errors, setErrors] = useState([]);\n  if (sessionUser) return /*#__PURE__*/_jsxDEV(Redirect, {\n    to: \"/\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 29\n  }, this);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (password === confirmPassword) {\n      setErrors([]);\n      return dispatch(sessionActions.signup({\n        email,\n        username,\n        password\n      })).catch(async res => {\n        const data = await res.json();\n        if (data && data.errors) setErrors(data.errors);\n      });\n    }\n\n    return setErrors(['Confirm Password field must be the same as the Password field']);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      children: errors.map((error, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: error\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 45\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Email\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Confirm Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Sign Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignupFormPage, \"nDllBLrW0cnvUKOU7N4GYXsBR74=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SignupFormPage;\nexport default SignupFormPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupFormPage\");","map":{"version":3,"names":["React","useState","useDispatch","useSelector","Redirect","sessionActions","SignupFormPage","dispatch","sessionUser","state","session","user","email","setEmail","username","setUsername","password","setPassword","confirmPassword","setConfirmPassword","errors","setErrors","handleSubmit","e","preventDefault","signup","catch","res","data","json","map","error","idx","target","value"],"sources":["/Users/aaron/1portfolio/port/portApp/frontend/src/components/SignupFormPage/index.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\nimport * as sessionActions from \"../../store/session\";\nimport './SignupForm.css';\n\n\nfunction SignupFormPage() {\n    const dispatch = useDispatch();\n    const sessionUser = useSelector((state) => state.session.user);\n    const [email, setEmail] = useState(\"\");\n    const [username, setUsername] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\n    const [errors, setErrors] = useState([]);\n\n    if (sessionUser) return <Redirect to=\"/\" />;\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if (password === confirmPassword) {\n            setErrors([]);\n            return dispatch(sessionActions.signup({ email, username, password }))\n                .catch(async (res) => {\n                    const data = await res.json();\n                    if (data && data.errors) setErrors(data.errors);\n                });\n        }\n        return setErrors(['Confirm Password field must be the same as the Password field']);\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <ul>\n                {errors.map((error, idx) => <li key={idx}>{error}</li>)}\n            </ul>\n            <label>\n                Email\n                <input\n                    type=\"text\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Username\n                <input\n                    type=\"text\"\n                    value={username}\n                    onChange={(e) => setUsername(e.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Password\n                <input\n                    type=\"password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                    required\n                />\n            </label>\n            <label>\n                Confirm Password\n                <input\n                    type=\"password\"\n                    value={confirmPassword}\n                    onChange={(e) => setConfirmPassword(e.target.value)}\n                    required\n                />\n            </label>\n            <button type=\"submit\">Sign Up</button>\n        </form>\n    );\n}\n\nexport default SignupFormPage;"],"mappings":"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"},"metadata":{},"sourceType":"module"}